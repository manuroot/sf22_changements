{% extends "ApplicationChangementsBundle::layout.html.twig" %}



  {% block stylesheets %}
    

{{ parent() }}
 
{% endblock %}


{% block content %}
      

    <div class="tab-pane" id="fotos">
      <div class="row">
        <div class="span6">
          <span class="btn btn-success btn-file btn-small fileinput-button">
            <i class="icon-plus icon-white"></i>
            <span>Subir archivos...</span>
            <input id="fileupload" type="file" name="files[]" multiple>
          </span>
          <button type="submit" class="btn btn-primary btn-small">
            <i class="icon-upload icon-white"></i>
            <span>Comenzar Subida</span>
          </button>
        </div>
      </div>
      <div class="row">
        <div class="span6">
          <br>
          <div id="progress" class="progress progress-stripped">
            <div class="bar"></div>
          </div>
        </div>
      </div>     
        <!--Contenido de FOTOS-->
      <div class="row">
      </div>
      </div>
         <p class="pull-right" id="form-botones">
            <input type="submit" value="Guardar" class="btn-primary btn btn-small" name="guardar" />
        {#    <input type="button" value="Cancelar" class="btn btn-small" onclick="location.href='{{ path('visitadocente')}}'" name="cancelar"/>
       #} </p>
    </div>
  </div>

{% endblock %}
{% block javascripts %}
<!-- The Load Image plugin is included for the preview images and image resizing functionality -->
<script src="http://blueimp.github.io/JavaScript-Load-Image/js/load-image.min.js"></script>
<!-- The Canvas to Blob plugin is included for image resizing functionality -->
<script src="http://blueimp.github.io/JavaScript-Canvas-to-Blob/js/canvas-to-blob.min.js"></script>
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
<script src="jquery/jquery.ui.widget.js"></script>
<script src="{{ asset('jquery/jquery.iframe-transport.js') }}"></script>
<script src="{{ asset('jquery/jquery.fileupload.js') }}"></script>
<script src="{{ asset('jquery/jquery.fileupload-process.js') }}"></script>
<script src="{{ asset('jquery/jquery.fileupload-image.js') }}"></script>
<script src="{{ asset('jquery/jquery.fileupload-validate.js') }}"></script>
<script>
$(document).ready(function (event) {
  'use strict';
  // Change this to the location of your server-side upload handler:
 

   var uploadButton = $('<button/>')
      .addClass('btn btn-primary btn-small')
      .prop('disabled', true)
      .text('Procesando...')
      .on('click', function () {
          var $this = $(this),
              data = $this.data();
          $this
              .off('click')
              .text('Cancelar')
              .on('click', function () {
                  $this.remove();
                  data.abort();
              });
          data.submit().always(function () {
              $this.remove();
          });
      });
  $('#fileupload').fileupload({
      url: '{{ oneup_uploader_endpoint("gallery") }}',
      dataType: 'json',
      limitMultiFileUploads: 4,
      autoUpload: false,
      acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i,
      maxFileSize: 40000000, // 4 MB
      // Enable image resizing, except for Android and Opera,
      // which actually support image resizing, but fail to
      // send Blob objects via XHR requests:
      disableImageResize: /Android(?!.*Chrome)|Opera/.test(window.navigator.userAgent),
      previewMaxWidth: 200,
      previewMaxHeight: 200,
      previewCrop: true
  }).on('fileuploadadd', function (event, data) {
      data.context = $('<div class="span3"/>').appendTo('#files');
      $.each(data.files, function (index, file) {
          var node = $('<p/>').append($('<span/>').text(file.name));
          node.append('<textarea name="descripcion-foto"/>');
          if (!index) {
              node
                  .append('<br>')
                  .append(uploadButton.clone(true).data(data));
          }
          node.appendTo(data.context);
      });
  }).on('fileuploadprocessalways', function (event, data) {
      console.dir(data);
      var index = data.index,
          file = data.files[index],
          node = $(data.context.children()[index]);
      if (file.preview) {
          node
              .prepend('<br>')
              .prepend(file.preview);
      }
      if (file.error) {
          node
              .append('<br>')
              .append(file.error);
      }
      if (index + 1 === data.files.length) {
          data.context.find('button')
              .text('Subir')
              .prop('disabled', !!data.files.error);
      }      
  }).on('fileuploadprogressall', function (event, data) {
      $('#progress .bar').css( 'width', '0%' );
      var progress = parseInt(data.loaded / data.total * 100, 10);
      $('#progress .bar').css( 'width', progress + '%' );

  }).on('fileuploaddone', function (event, data) {
      console.log('Archiv subido');
      $.each(data.files, function (index, file) {        
          var link = $('<a>')
              .attr('target', '_blank')
              .prop('href', file.url);
          $(data.context.children()[index])
              .wrap(link);
      });

  }).on('fileuploadfail', function (event, data) {
      console.log('Archiv fallado');
      $.each(data.files, function (index, file) {        
          var error = $('<span/>').text(file.error);
          $(data.context.children()[index])
              .append('<br>')
              .append(error);
      });

  }).prop('disabled', !$.support.fileInput)
      .parent().addClass($.support.fileInput ? undefined : 'disabled');
});
</script>
{% endblock %}

